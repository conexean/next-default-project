generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String    @db.VarChar(15)
  lastname      String?   @db.VarChar(15)
  email         String    @unique @db.VarChar(150)
  password      String
  active        Boolean   @default(true)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  deactivatedAt DateTime?
}

model Company {
  id            String    @id @default(cuid())
  name          String    @db.VarChar(150)
  cnpj          String    @unique @db.VarChar(14)
  active        Boolean   @default(true)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  deactivatedAt DateTime?
  vehicles      Vehicle[]
  contributors  CompanyContributor[]
}

model Vehicle {
  id            String    @id @default(cuid())
  licensePlate  String    @unique @db.VarChar(7)
  owner         String    @db.VarChar(50)
  carModel      String    @db.VarChar(50)
  companyId     String
  active        Boolean   @default(true)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  deactivatedAt DateTime?
  company       Company   @relation(fields: [companyId], references: [id])
}

model Contributor {
  id               String    @id @default(cuid())
  name             String    @db.VarChar(20)
  lastName         String?   @db.VarChar(20)
  registration     String    @unique @db.VarChar(20)
  internalPassword String?   @db.VarChar(50)
  telephone        String?   @db.VarChar(11)
  observation      String?   @db.VarChar(200)
  photoURL         String?   @db.VarChar(200)
  active           Boolean   @default(true)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  deactivatedAt    DateTime?
  companies        CompanyContributor[]
}

model CompanyContributor {
  companyId      String
  contributorId  String
  company        Company     @relation(fields: [companyId], references: [id])
  contributor    Contributor @relation(fields: [contributorId], references: [id])

  @@id([companyId, contributorId])
}
